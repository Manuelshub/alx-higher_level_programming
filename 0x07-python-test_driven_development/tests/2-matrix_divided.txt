Test Cases for 2-matrix_divided.py
==================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...		[1, 2, 3],
...		[4, 5, 6]
...	]

Testing when a string is passed as the matrix
=============================================

>>> print(matrix_divided("string", 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing when the divisor is zero
================================

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

Testing when the divisor is a string
====================================

>>> print(matrix_divided(matrix, "10"))
Traceback (most recent call last):
TypeError: div must be a number

Testing when a real matrix and a real integer is passed
=======================================================

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing when the size of the each row of the matrix are not equal
=================================================================

>>> matrix = [
...		[1, 2, 3],
...		[4, 5],
...		[6, 7, 8],
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
